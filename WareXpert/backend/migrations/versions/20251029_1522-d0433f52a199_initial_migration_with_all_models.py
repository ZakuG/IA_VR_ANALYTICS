"""Initial migration with all models

Revision ID: d0433f52a199
Revises: 
Create Date: 2025-10-29 15:22:08.371162

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'd0433f52a199'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('tenants',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=200), nullable=False),
    sa.Column('subdomain', sa.String(length=50), nullable=False),
    sa.Column('tax_id', sa.String(length=50), nullable=True),
    sa.Column('address', sa.String(length=500), nullable=True),
    sa.Column('phone', sa.String(length=50), nullable=True),
    sa.Column('email', sa.String(length=100), nullable=True),
    sa.Column('plan', sa.String(length=50), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('logo_url', sa.String(length=500), nullable=True),
    sa.Column('primary_color', sa.String(length=7), nullable=True),
    sa.Column('settings', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('subdomain')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('tenant_id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('password_hash', sa.String(length=255), nullable=False),
    sa.Column('full_name', sa.String(length=200), nullable=False),
    sa.Column('phone', sa.String(length=50), nullable=True),
    sa.Column('avatar_url', sa.String(length=500), nullable=True),
    sa.Column('role', sa.String(length=50), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_verified', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('last_login', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenants.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_user_tenant_email', 'users', ['tenant_id', 'email'], unique=False)
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_table('warehouses',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('tenant_id', sa.Integer(), nullable=False),
    sa.Column('code', sa.String(length=50), nullable=False),
    sa.Column('name', sa.String(length=200), nullable=False),
    sa.Column('length', sa.Float(), nullable=False),
    sa.Column('width', sa.Float(), nullable=False),
    sa.Column('height', sa.Float(), nullable=False),
    sa.Column('total_capacity_m3', sa.Float(), nullable=True),
    sa.Column('total_capacity_kg', sa.Float(), nullable=True),
    sa.Column('total_capacity_items', sa.Integer(), nullable=True),
    sa.Column('used_capacity_m3', sa.Float(), nullable=True),
    sa.Column('used_capacity_kg', sa.Float(), nullable=True),
    sa.Column('used_capacity_items', sa.Integer(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenants.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('tenant_id', 'code', name='uq_warehouse_code_per_tenant')
    )
    op.create_index('idx_warehouse_tenant', 'warehouses', ['tenant_id'], unique=False)
    op.create_table('locations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('warehouse_id', sa.Integer(), nullable=False),
    sa.Column('code', sa.String(length=50), nullable=False),
    sa.Column('type', sa.String(length=50), nullable=True),
    sa.Column('zone', sa.String(length=50), nullable=True),
    sa.Column('x_position', sa.Float(), nullable=False),
    sa.Column('y_position', sa.Float(), nullable=False),
    sa.Column('z_position', sa.Float(), nullable=False),
    sa.Column('length', sa.Float(), nullable=True),
    sa.Column('width', sa.Float(), nullable=True),
    sa.Column('height', sa.Float(), nullable=True),
    sa.Column('capacity_m3', sa.Float(), nullable=True),
    sa.Column('capacity_kg', sa.Float(), nullable=True),
    sa.Column('max_stackable', sa.Integer(), nullable=True),
    sa.Column('used_m3', sa.Float(), nullable=True),
    sa.Column('used_kg', sa.Float(), nullable=True),
    sa.Column('current_items', sa.Integer(), nullable=True),
    sa.Column('priority_level', sa.Integer(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_accessible', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['warehouse_id'], ['warehouses.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('warehouse_id', 'code', name='uq_location_code_per_warehouse')
    )
    op.create_index('idx_location_warehouse', 'locations', ['warehouse_id'], unique=False)
    op.create_index('idx_location_zone', 'locations', ['zone'], unique=False)
    op.create_table('products',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('tenant_id', sa.Integer(), nullable=False),
    sa.Column('warehouse_id', sa.Integer(), nullable=False),
    sa.Column('sku', sa.String(length=100), nullable=False),
    sa.Column('barcode', sa.String(length=100), nullable=True),
    sa.Column('qr_code', sa.String(length=500), nullable=True),
    sa.Column('name', sa.String(length=300), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('category', sa.String(length=100), nullable=True),
    sa.Column('brand', sa.String(length=100), nullable=True),
    sa.Column('weight_kg', sa.Float(), nullable=True),
    sa.Column('volume_m3', sa.Float(), nullable=True),
    sa.Column('length_cm', sa.Float(), nullable=True),
    sa.Column('width_cm', sa.Float(), nullable=True),
    sa.Column('height_cm', sa.Float(), nullable=True),
    sa.Column('image_url', sa.String(length=500), nullable=True),
    sa.Column('thumbnail_url', sa.String(length=500), nullable=True),
    sa.Column('gallery', sa.JSON(), nullable=True),
    sa.Column('cost_price', sa.Float(), nullable=True),
    sa.Column('sale_price', sa.Float(), nullable=True),
    sa.Column('margin_percent', sa.Float(), nullable=True),
    sa.Column('stock_min', sa.Integer(), nullable=True),
    sa.Column('stock_max', sa.Integer(), nullable=True),
    sa.Column('reorder_point', sa.Integer(), nullable=True),
    sa.Column('attributes', sa.JSON(), nullable=True),
    sa.Column('total_sales', sa.Integer(), nullable=True),
    sa.Column('sales_last_30d', sa.Integer(), nullable=True),
    sa.Column('sales_frequency', sa.Float(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_visible_ecommerce', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('last_sold_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenants.id'], ),
    sa.ForeignKeyConstraint(['warehouse_id'], ['warehouses.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_product_brand', 'products', ['brand'], unique=False)
    op.create_index('idx_product_category', 'products', ['category'], unique=False)
    op.create_index('idx_product_name', 'products', ['name'], unique=False)
    op.create_index('idx_product_tenant', 'products', ['tenant_id'], unique=False)
    op.create_index(op.f('ix_products_barcode'), 'products', ['barcode'], unique=False)
    op.create_index(op.f('ix_products_brand'), 'products', ['brand'], unique=False)
    op.create_index(op.f('ix_products_category'), 'products', ['category'], unique=False)
    op.create_index(op.f('ix_products_sku'), 'products', ['sku'], unique=True)
    op.create_table('quotes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('tenant_id', sa.Integer(), nullable=False),
    sa.Column('number', sa.String(length=50), nullable=False),
    sa.Column('customer_name', sa.String(length=200), nullable=False),
    sa.Column('customer_tax_id', sa.String(length=50), nullable=True),
    sa.Column('customer_email', sa.String(length=100), nullable=True),
    sa.Column('customer_phone', sa.String(length=50), nullable=True),
    sa.Column('customer_address', sa.String(length=500), nullable=True),
    sa.Column('subtotal', sa.Float(), nullable=True),
    sa.Column('discount', sa.Float(), nullable=True),
    sa.Column('discount_type', sa.String(length=20), nullable=True),
    sa.Column('tax', sa.Float(), nullable=True),
    sa.Column('total', sa.Float(), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('valid_until', sa.DateTime(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('payment_terms', sa.String(length=500), nullable=True),
    sa.Column('delivery_time', sa.String(length=100), nullable=True),
    sa.Column('pdf_url', sa.String(length=500), nullable=True),
    sa.Column('pdf_generated_at', sa.DateTime(), nullable=True),
    sa.Column('created_by_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('sent_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenants.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_quote_customer_email', 'quotes', ['customer_email'], unique=False)
    op.create_index('idx_quote_status', 'quotes', ['status'], unique=False)
    op.create_index('idx_quote_tenant', 'quotes', ['tenant_id'], unique=False)
    op.create_index(op.f('ix_quotes_number'), 'quotes', ['number'], unique=True)
    op.create_table('quote_items',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('quote_id', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('unit_price', sa.Float(), nullable=False),
    sa.Column('discount', sa.Float(), nullable=True),
    sa.Column('discount_type', sa.String(length=20), nullable=True),
    sa.Column('subtotal', sa.Float(), nullable=False),
    sa.Column('product_name', sa.String(length=300), nullable=True),
    sa.Column('product_sku', sa.String(length=100), nullable=True),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
    sa.ForeignKeyConstraint(['quote_id'], ['quotes.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('sales',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('tenant_id', sa.Integer(), nullable=False),
    sa.Column('number', sa.String(length=50), nullable=False),
    sa.Column('quote_id', sa.Integer(), nullable=True),
    sa.Column('customer_name', sa.String(length=200), nullable=False),
    sa.Column('customer_tax_id', sa.String(length=50), nullable=True),
    sa.Column('customer_email', sa.String(length=100), nullable=True),
    sa.Column('customer_phone', sa.String(length=50), nullable=True),
    sa.Column('customer_address', sa.String(length=500), nullable=True),
    sa.Column('subtotal', sa.Float(), nullable=True),
    sa.Column('discount', sa.Float(), nullable=True),
    sa.Column('tax', sa.Float(), nullable=True),
    sa.Column('total', sa.Float(), nullable=True),
    sa.Column('payment_method', sa.String(length=50), nullable=True),
    sa.Column('payment_status', sa.String(length=50), nullable=True),
    sa.Column('paid_amount', sa.Float(), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('created_by_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('shipped_at', sa.DateTime(), nullable=True),
    sa.Column('delivered_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['quote_id'], ['quotes.id'], ),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenants.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_sale_created', 'sales', ['created_at'], unique=False)
    op.create_index('idx_sale_status', 'sales', ['status'], unique=False)
    op.create_index('idx_sale_tenant', 'sales', ['tenant_id'], unique=False)
    op.create_index(op.f('ix_sales_number'), 'sales', ['number'], unique=True)
    op.create_table('stock_movements',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.Column('location_from_id', sa.Integer(), nullable=True),
    sa.Column('location_to_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('type', sa.String(length=50), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('reference_type', sa.String(length=50), nullable=True),
    sa.Column('reference_id', sa.Integer(), nullable=True),
    sa.Column('reason', sa.String(length=500), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['location_from_id'], ['locations.id'], ),
    sa.ForeignKeyConstraint(['location_to_id'], ['locations.id'], ),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_movement_created', 'stock_movements', ['created_at'], unique=False)
    op.create_index('idx_movement_product', 'stock_movements', ['product_id'], unique=False)
    op.create_index('idx_movement_type', 'stock_movements', ['type'], unique=False)
    op.create_table('stocks',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.Column('location_id', sa.Integer(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('reserved', sa.Integer(), nullable=False),
    sa.Column('available', sa.Integer(), nullable=False),
    sa.Column('last_movement', sa.DateTime(), nullable=True),
    sa.Column('last_count', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['location_id'], ['locations.id'], ),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('product_id', 'location_id', name='uq_product_location')
    )
    op.create_index('idx_stock_location', 'stocks', ['location_id'], unique=False)
    op.create_index('idx_stock_product', 'stocks', ['product_id'], unique=False)
    op.create_table('picking_orders',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('number', sa.String(length=50), nullable=False),
    sa.Column('sale_id', sa.Integer(), nullable=False),
    sa.Column('assigned_to_id', sa.Integer(), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('priority', sa.String(length=50), nullable=True),
    sa.Column('route', sa.JSON(), nullable=True),
    sa.Column('estimated_time_minutes', sa.Integer(), nullable=True),
    sa.Column('actual_time_minutes', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('started_at', sa.DateTime(), nullable=True),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['assigned_to_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['sale_id'], ['sales.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_picking_assigned', 'picking_orders', ['assigned_to_id'], unique=False)
    op.create_index('idx_picking_status', 'picking_orders', ['status'], unique=False)
    op.create_index(op.f('ix_picking_orders_number'), 'picking_orders', ['number'], unique=True)
    op.create_table('sale_items',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('sale_id', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.Column('location_id', sa.Integer(), nullable=True),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('unit_price', sa.Float(), nullable=False),
    sa.Column('discount', sa.Float(), nullable=True),
    sa.Column('subtotal', sa.Float(), nullable=False),
    sa.Column('product_name', sa.String(length=300), nullable=True),
    sa.Column('product_sku', sa.String(length=100), nullable=True),
    sa.Column('picked_quantity', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['location_id'], ['locations.id'], ),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
    sa.ForeignKeyConstraint(['sale_id'], ['sales.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('picking_order_items',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('picking_order_id', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.Column('location_id', sa.Integer(), nullable=False),
    sa.Column('quantity_required', sa.Integer(), nullable=False),
    sa.Column('quantity_picked', sa.Integer(), nullable=True),
    sa.Column('sequence', sa.Integer(), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('notes', sa.String(length=500), nullable=True),
    sa.Column('picked_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['location_id'], ['locations.id'], ),
    sa.ForeignKeyConstraint(['picking_order_id'], ['picking_orders.id'], ),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('picking_order_items')
    op.drop_table('sale_items')
    op.drop_index(op.f('ix_picking_orders_number'), table_name='picking_orders')
    op.drop_index('idx_picking_status', table_name='picking_orders')
    op.drop_index('idx_picking_assigned', table_name='picking_orders')
    op.drop_table('picking_orders')
    op.drop_index('idx_stock_product', table_name='stocks')
    op.drop_index('idx_stock_location', table_name='stocks')
    op.drop_table('stocks')
    op.drop_index('idx_movement_type', table_name='stock_movements')
    op.drop_index('idx_movement_product', table_name='stock_movements')
    op.drop_index('idx_movement_created', table_name='stock_movements')
    op.drop_table('stock_movements')
    op.drop_index(op.f('ix_sales_number'), table_name='sales')
    op.drop_index('idx_sale_tenant', table_name='sales')
    op.drop_index('idx_sale_status', table_name='sales')
    op.drop_index('idx_sale_created', table_name='sales')
    op.drop_table('sales')
    op.drop_table('quote_items')
    op.drop_index(op.f('ix_quotes_number'), table_name='quotes')
    op.drop_index('idx_quote_tenant', table_name='quotes')
    op.drop_index('idx_quote_status', table_name='quotes')
    op.drop_index('idx_quote_customer_email', table_name='quotes')
    op.drop_table('quotes')
    op.drop_index(op.f('ix_products_sku'), table_name='products')
    op.drop_index(op.f('ix_products_category'), table_name='products')
    op.drop_index(op.f('ix_products_brand'), table_name='products')
    op.drop_index(op.f('ix_products_barcode'), table_name='products')
    op.drop_index('idx_product_tenant', table_name='products')
    op.drop_index('idx_product_name', table_name='products')
    op.drop_index('idx_product_category', table_name='products')
    op.drop_index('idx_product_brand', table_name='products')
    op.drop_table('products')
    op.drop_index('idx_location_zone', table_name='locations')
    op.drop_index('idx_location_warehouse', table_name='locations')
    op.drop_table('locations')
    op.drop_index('idx_warehouse_tenant', table_name='warehouses')
    op.drop_table('warehouses')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_index('idx_user_tenant_email', table_name='users')
    op.drop_table('users')
    op.drop_table('tenants')
    # ### end Alembic commands ###
